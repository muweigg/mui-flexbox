@import 'variables';

@function map-set ($map, $key, $value) {
	$new: ($key: $value);
	@return map-merge($map, $new);
}

@function update-list-in-map ($map, $key, $value) {
	$list: append(map-get($map, $key), $value);
	@return map-set($map, $key, $list);
}

@function get-columns ($columns) {
	$unique-index: ();
	$columns-new: ();
	@each $column in $columns {
		@for $i from 1 through $column {
			@if $column % $i == 0 and not(map-has-key($unique-index , $i)) {
				$unique-index: map-set($unique-index, $i, true);
				$columns-new: append($columns-new, $i);
			}
		}
	}
	@return $columns-new;
}

@function get-selector-prefix ($ratio, $breakpoint: null, $offset: false) {
	@if $breakpoint {
		$breakpoint: #{$breakpoint}-;
	}
	$selector-prefix: #{$prefix}#{$breakpoint};
	@if $offset {
		$selector-prefix: #{$prefix}offset-#{$breakpoint};
	}
	@return $selector-prefix;
}

@function get-column-selectors ($ratio, $breakpoint: null, $offset: false) {
	$selectors: '';
	@if $class-selector {
		$selectors: '.#{get-selector-prefix($ratio, $breakpoint, $offset)}#{$ratio}';
	}
	@if $attribute-selector {
		@if $selectors == '' {
			$selectors: '[#{get-selector-prefix($ratio, $breakpoint, $offset)}#{$ratio}]';
		} @else {
			$selectors: $selectors + ', [#{get-selector-prefix($ratio, $breakpoint, $offset)}#{$ratio}]';
		}
	}
	@return $selectors;
}

@function get-selectors-by-name ($name, $breakpoint: null) {
	$parent-symbol: null;
	@if str-slice($name, 1, 1) == '&' {
		$parent-symbol: '&';
		$name: str-slice($name, 2, str-length($name));
	}
	@if $breakpoint {
		$breakpoint: -#{$breakpoint};
	}
	$selectors: '';
	@if $class-selector {
		$selectors: '#{$parent-symbol}.#{$name}#{$breakpoint}';
	}
	@if $attribute-selector {
		@if $selectors == '' {
			$selectors: '#{$parent-symbol}[#{$name}#{$breakpoint}]';
		} @else {
			$selectors: $selectors + ', #{$parent-symbol}[#{$name}#{$breakpoint}]';
		}
	}
	@return $selectors;
}

@function get-breakpoint ($breakpoint) {
	$breakpoint-value: map-get($breakpoints, $breakpoint);
	@if $breakpoint-value {
		$breakpoint: $breakpoint-value;
	}
	@return $breakpoint;
}